{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","components/Fish.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","propType","PropTypes","string","isRequired","AddFishForm","nameRef","priceRef","statusRef","descRef","imgRef","createFish","fish","name","price","parseFloat","status","desc","img","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","image","onClick","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","storeId","fetch","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","loadSampleFishes","Order","renderOrder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","component","removeFromOrder","orderIds","total","reduce","prevTotal","Fish","handleClick","addToOrder","details","src","alt","disabled","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.f00aad06.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React, { Component } from 'react';\r\nimport {getFunName} from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StorePicker extends Component {\r\n\r\n  static propTypes = {\r\n    history: PropTypes.object\r\n  };\r\n\r\n  myInput = React.createRef()\r\n\r\n  goToStore = event => {\r\n    // 1. Stop form from submitting\r\n     event.preventDefault()\r\n\r\n     // 2. Grab the input value\r\n     const storeName = this.myInput.current.value\r\n\r\n     // 3. Change the page to /store/whatever-they-entered\r\n     this.props.history.push(`/store/${storeName}`)\r\n   }\r\n    \r\n  render() {\r\n    return (\r\n        <form className=\"store-selector\" onSubmit={ this.goToStore }>\r\n          <h2>Please Enter A Store</h2>\r\n          <input \r\n            type=\"text\" \r\n            ref={this.myInput}\r\n            required \r\n            placeholder=\"Store Name\" \r\n            defaultValue={ getFunName() } \r\n          />\r\n          {/* To Print Arrow: Alt + 2 + 6 */}\r\n          <button type=\"submit\">Visit Store → </button>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({ tagline }) => (\r\n  <header className=\"top\">\r\n        <h1>\r\n          Catch \r\n          <span className=\"ofThe\">\r\n            <span className=\"of\">OF</span>\r\n            <span className=\"the\">THE</span> \r\n          </span>\r\n          Day\r\n        </h1>\r\n        <h3 className=\"tagline\">\r\n          <span>{tagline}</span>\r\n        </h3>\r\n      </header>\r\n);\r\n\r\nHeader.propType = {\r\n  tagline: PropTypes.string.isRequired\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends Component {\r\n  nameRef = React.createRef()\r\n  priceRef = React.createRef()\r\n  statusRef = React.createRef()\r\n  descRef = React.createRef()\r\n  imgRef = React.createRef()\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func\r\n  }\r\n\r\n  createFish = (event) => {\r\n\r\n    // 1. Stop form from submitting\r\n    event.preventDefault()\r\n\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      img: this.imgRef.current.value,\r\n    }\r\n\r\n    // 2. Add fish\r\n    this.props.addFish(fish)\r\n\r\n    // 3. Reset the form\r\n    event.currentTarget.reset()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          ref={this.nameRef}\r\n          placeholder=\"Name\" \r\n        />\r\n\r\n        <input \r\n          type=\"text\" \r\n          name=\"price\" \r\n          ref={this.priceRef} \r\n          placeholder=\"Price\" \r\n        />\r\n\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n\r\n        <textarea \r\n          name=\"desc\" \r\n          ref={this.descRef} \r\n          placeholder=\"Desc\"\r\n        ></textarea>\r\n\r\n        <input \r\n          type=\"text\" \r\n          name=\"img\" \r\n          ref={this.imgRef} \r\n          placeholder=\"Image\" \r\n        />\r\n\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      image: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number\r\n    }),\r\n    index: PropTypes.string,\r\n    updateFish: PropTypes.func\r\n  }\r\n\r\n  // Update that fish\r\n  // 1. Take a copy of current fish\r\n  handleChange = (event) => {\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    };\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input \r\n          type=\"text\" \r\n          name=\"name\" \r\n          onChange={this.handleChange} \r\n          value={this.props.fish.name} \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          name=\"price\" \r\n          onChange={this.handleChange} \r\n          value={this.props.fish.price} \r\n        />\r\n        <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status} >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea \r\n          name=\"desc\" \r\n          onChange={this.handleChange} \r\n          value={this.props.fish.desc} \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          name=\"image\" \r\n          onChange={this.handleChange} \r\n          value={this.props.fish.image} \r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n          Remove Fish\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => (\r\n    <nav className=\"login\">\r\n        <h2>Inventory Login</h2>\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button \r\n            className=\"github\" \r\n            onClick={() => props.authenticate('Github')}\r\n        >\r\n            Log In With Github\r\n        </button>\r\n        <button \r\n            className=\"facebook\" \r\n            onClick={() => props.authenticate('Facebook')}\r\n        >\r\n            Log In With Facebook\r\n        </button>\r\n        <button \r\n            className=\"twitter\" \r\n            onClick={() => props.authenticate('Twitter')}\r\n        >\r\n            Log In With Twitter\r\n        </button>\r\n    </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired \r\n};\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCmB37vF6UAIYJcPpl1Y5t3eYAlHE3Sb3k\",\r\n  authDomain: \"catch-of-the-day-222cc.firebaseapp.com\",\r\n  databaseURL: \"https://catch-of-the-day-222cc-default-rtdb.firebaseio.com\",\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// This is named export\r\nexport { firebase };\r\n\r\n// This is default export\r\nexport default base;","import React, { Component } from 'react';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport PropTypes from 'prop-types';\r\nimport Login from './Login';\r\nimport firebase from 'firebase';\r\nimport base, { firebaseApp } from '../base';\r\n\r\nclass Inventory extends Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    addFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged( user => {\r\n      if(user) {\r\n        this.authHandler({ user });\r\n      }\r\n    })\r\n  }\r\n\r\n  authHandler = async (authData) => {\r\n    // 1. Look up the current store in the firebase database\r\n    const storeId = this.props.storeId;\r\n    const store = await base.fetch(storeId, { context: this });\r\n    console.log(store);\r\n    // 2. Claim it if there is no owner\r\n    if(!store.owner) {\r\n      await base.post(`${storeId}/owner`, {\r\n        data: authData.user.uid\r\n      });\r\n    }\r\n    // 3. Set the state of inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    });\r\n  }\r\n\r\n  authenticate = (provider) => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  }\r\n\r\n  logout = async () => {\r\n    console.log(\"logging out\")\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  }\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out!</button>\r\n    // 1. Check if they are logged in\r\n    if(!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n\r\n    // 2. Check if they are not the owner of the store\r\n    if(this.state.uid !== this.state.owner) {\r\n      return <div>\r\n        <p>Sorry you are not the owner!</p>\r\n        {logout}\r\n      </div>\r\n    }\r\n\r\n    // 3. They must be the owner, Just render out the inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map( key => \r\n          <EditFishForm \r\n            key={key} \r\n            index={key} \r\n            fish={this.props.fishes[key]} \r\n            updateFish={this.props.updateFish} \r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        )}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;","import React, { Component } from 'react';\r\nimport { formatPrice } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Order extends Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func,\r\n  };\r\n\r\n    renderOrder = key => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === 'available';\r\n      const transitionOptions = {\r\n        classNames: \"order\",\r\n        key,\r\n        timeout: { enter: 500, exit: 500 }\r\n      };\r\n\r\n      if(!fish) return null;\r\n\r\n      if(!isAvailable) {\r\n        return (\r\n          <CSSTransition { ...transitionOptions }>\r\n            <li key={key}>\r\n              Sorry { fish ? fish.name : 'fish'} is no longer vailable\r\n            </li>\r\n          </CSSTransition>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            <span>\r\n              <TransitionGroup component=\"span\" className=\"count\">\r\n                <CSSTransition \r\n                  classNames=\"count\" \r\n                  key={count}\r\n                  timeout={{ enter: 500, exit: 500 }}\r\n                >\r\n                  <span>{ count }</span>\r\n                </CSSTransition>\r\n              </TransitionGroup>\r\n              lbs { fish.name }\r\n              {formatPrice(count * fish.price)}\r\n              <button onClick={() => this.props.removeFromOrder(key)}>\r\n                &times;\r\n              </button>\r\n            </span>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n\r\n    render() {\r\n      const orderIds = Object.keys(this.props.order)\r\n      const total = orderIds.reduce(( prevTotal, key) => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        if(isAvailable) {\r\n          return prevTotal + ( count * fish.price );\r\n        }\r\n        return prevTotal;\r\n      }, 0);\r\n\r\n      return (\r\n        <div className=\"order-wrap\">\r\n          <h2>Order</h2>\r\n          <TransitionGroup component=\"ul\" className=\"order\"> \r\n            { orderIds.map( this.renderOrder) }\r\n          </TransitionGroup>\r\n          <div className=\"total\">\r\n            Total: <strong>{formatPrice(total)}</strong>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\nimport { formatPrice } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Fish extends Component {\r\n\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      image: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number,\r\n    }),\r\n    addToOrder: PropTypes.func\r\n  }\r\n  \r\n  handleClick = () => this.props.addToOrder(this.props.index)\r\n    \r\n  render() {\r\n    const { name, image, desc, price, status } = this.props.details\r\n    const isAvailable = status === 'available'\r\n\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button disabled={!isAvailable} onClick={this.handleClick}>\r\n          { isAvailable ? 'Add To Cart' : 'Sold Out!' }\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Inventory from './Inventory';\r\nimport Order from './Order';\r\nimport Fish from './Fish';\r\nimport sampleFishes from '../sample-fishes'\r\nimport base from '../base'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    fishes: {},\r\n    order: {}\r\n  }\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object \r\n  }\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // First re-instantiate our local-storage\r\n    const localStorageRef = localStorage.getItem(params.storeId)\r\n    if( localStorageRef ) {\r\n      this.setState({ order: JSON.parse(localStorageRef) })\r\n    }\r\n\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: 'fishes'\r\n    })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\r\n      this.props.match.params.storeId,\r\n      JSON.stringify(this.state.order)\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = (fish) => {\r\n    // 1. Take a copy of state\r\n    const fishes = { ...this.state.fishes }\r\n    // 2. Add our new fish to that variable\r\n    fishes[`fish${Date.now()}`] = fish\r\n    // 3. Set the new fishes to state\r\n    this.setState({ fishes })\r\n  }\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // 1. Take a copy of current state\r\n    const fishes = { ...this.state.fishes }\r\n    // 2. Update the state\r\n    fishes[key] = updatedFish;\r\n    // 3. Set that to state\r\n    this.setState({ fishes });\r\n  }\r\n\r\n  deleteFish = (key) => {\r\n    // 1. Take a copy of state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Remove the fish\r\n    fishes[key] = null;\r\n    // 3. Update state\r\n    this.setState({ fishes });\r\n  }\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes })\r\n  }\r\n\r\n  addToOrder = (key) => {\r\n    // 1. Take a copy of state\r\n    const order = { ...this.state.order }\r\n    // 2. Either add to the orders or update the number of our order\r\n    order[key] = order[key] + 1 || 1 \r\n    // 3. Call setState to update our state object\r\n    this.setState({ order })\r\n  }\r\n\r\n  removeFromOrder = (key) => {\r\n    // 1. Take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Remove that item from order\r\n    delete order[key];\r\n    // 3. Update the state\r\n    this.setState({ order });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Sea Food Market\" />\r\n          <ul className=\"fishes\">\r\n            {\r\n              Object.keys(this.state.fishes).map(key => \r\n                <Fish \r\n                key={key} \r\n                index={key}\r\n                details={this.state.fishes[key]} \r\n                addToOrder={this.addToOrder}\r\n              />\r\n              )\r\n            }\r\n          </ul>\r\n        </div>\r\n        <Order \r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          removeFromOrder={this.removeFromOrder}\r\n        />\r\n        <Inventory \r\n          addFish={this.addFish} \r\n          updateFish={this.updateFish} \r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes} \r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not Found !!!</h2>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={StorePicker} />\r\n            <Route path=\"/store/:storeId\" component={App} />\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Router;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';  \r\n\r\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}